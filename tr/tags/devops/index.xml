<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Devops on Aşkın Özgür</title><link>https://askin.ws/tr/tags/devops/</link><description>Recent content in Devops on Aşkın Özgür</description><generator>Hugo -- gohugo.io</generator><language>tr</language><lastBuildDate>Thu, 19 Jan 2023 13:00:00 +0300</lastBuildDate><atom:link href="https://askin.ws/tr/tags/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker EXPOSE</title><link>https://askin.ws/tr/blog/docker-expose/</link><pubDate>Thu, 19 Jan 2023 13:00:00 +0300</pubDate><guid>https://askin.ws/tr/blog/docker-expose/</guid><description>&lt;p>Bir etkinlik sırasında &lt;code>EXPOSE&lt;/code> kullanımıyla ilgili bir anlaşmazlığa düştük, ben de biraz inceleyip onunla ilgili bir yazı yazmak istedim.
Öncelikle &lt;a href="https://docs.docker.com/engine/reference/builder/#expose" title="Dockerfile reference">Dockerfile referans&lt;/a> dökümanından &lt;code>EXPOSE&lt;/code> ile ilgili verilen bilgiye bakalım.&lt;/p>
&lt;blockquote>
&lt;p>The &lt;code>EXPOSE&lt;/code> instruction informs Docker that the container listens on the specified network ports at runtime. You can specify whether the port listens on TCP or UDP, and the default is TCP if the protocol is not specified.
The &lt;code>EXPOSE&lt;/code> instruction does not actually publish the port. It functions as a type of documentation between the person who builds the image and the person who runs the container, about which ports are intended to be published. To actually publish the port when running the container, use the &lt;code>-p&lt;/code> flag on &lt;code>docker run&lt;/code> to publish and map one or more ports, or the &lt;code>-P&lt;/code> flag to publish all exposed ports and map them to high-order ports.&lt;/p>
&lt;/blockquote>
&lt;p>Dökümana göre &lt;code>Dockerfile&lt;/code> içinde yazılan &lt;code>EXPOSE&lt;/code> ifadesi herhangi bir port yönlendirme(publish) yapmıyor, çalıştırma sırasında uygulamanın hangi portların dışarı açabileceği konusunda &lt;code>Docker&lt;/code>ı bilgilendiriyor.&lt;/p>
&lt;p>Daha iyi anlamak için hemen bir örnek yapalım. Aşağıdaki &lt;code>Dockerfile&lt;/code> ı kullanarak oluşturduğum bir imajım var.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">FROM&lt;/span>&lt;span style="color:#e6db74"> python:3.9&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">WORKDIR&lt;/span>&lt;span style="color:#e6db74"> /code&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">COPY&lt;/span> ./requirements.txt /code/requirements.txt&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> pip install --no-cache-dir --upgrade -r /code/requirements.txt&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">COPY&lt;/span> ./app /code/app&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">CMD&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;uvicorn&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;app.main:app&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;--proxy-headers&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;--host&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;0.0.0.0&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;--port&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;8123&amp;#34;&lt;/span>]&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Görüldüğü üzere bu &lt;code>Dockerfile&lt;/code> içinde herhangi bir port tanımlaması yapmadık. Sadece &lt;code>uvicorn&lt;/code> uygulamasına &lt;code>8123&lt;/code> portundan çalışacağını söyledik.&lt;/p>
&lt;p>Bunu aşağıdaki komutla çalıştırıp istek attığımızda beklediğimiz gibi çalıştığını görebiliyoruz.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker run --rm --name test-without-expose -p 8123:8123 askinozgur/publish-port-without-expose
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl http://localhost:8123
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{&lt;span style="color:#f92672">&amp;#34;Hello&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;World&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Dökumanın söylediği, bizim de test edip gördüğümüz gibi port yönlendirebilmek için &lt;code>EXPOSE&lt;/code> kullanmamız şart değil.&lt;/p>
&lt;p>Peki &lt;code>EXPOSE&lt;/code> bilgilendirme dışında başka hiç bir işe yaramıyor mu? Aslında &lt;code>docker&lt;/code>ı çalıştırırken &lt;code>-P&lt;/code> parametresini verirsek &lt;code>EXPOSE&lt;/code> ile tanımlanmış bütün portları boşta bulunan bir porta yönlendirmiş olacağız.&lt;/p>
&lt;p>Aşağıdaki &lt;code>Dockerfile&lt;/code> kullanılarak oluşturulmuş imajı çalıştırdığımız bir örneğe bakalım.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">FROM&lt;/span>&lt;span style="color:#e6db74"> python:3.9&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">WORKDIR&lt;/span>&lt;span style="color:#e6db74"> /code&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">COPY&lt;/span> ./requirements.txt /code/requirements.txt&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">RUN&lt;/span> pip install --no-cache-dir --upgrade -r /code/requirements.txt&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">COPY&lt;/span> ./app /code/app&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">EXPOSE&lt;/span>&lt;span style="color:#e6db74"> 8123&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">CMD&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;uvicorn&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;app.main:app&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;--proxy-headers&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;--host&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;0.0.0.0&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;--port&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;8123&amp;#34;&lt;/span>]&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker run --rm --name test-with-expose -P askinozgur/publish-port-with-expose
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker ps
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
b3be17aef125 askinozgur/publish-port-with-expose &amp;#34;uvicorn app.main:ap…&amp;#34; 5 seconds ago Up 5 seconds 0.0.0.0:49157-&amp;gt;8123/tcp, :::49157-&amp;gt;8123/tcp test-with-expose
&lt;/code>&lt;/pre>&lt;p>&lt;code>docker ps&lt;/code> çıktısınd görüldüğü gibi içerdeki &lt;code>8123&lt;/code> portu dışarıya &lt;code>49157&lt;/code> olarak yönlendirildi. Bu port her yeni konteyner oluşturulduğunda değişecektir.&lt;/p>
&lt;p>Bu yazıda kullandığım örneklere aşağıdaki github reposundan erişebilirsiniz.&lt;/p>
&lt;p>&lt;a href="https://github.com/askin/docker-examples" title="Docker Örnekleri">https://github.com/askin/docker-examples&lt;/a>&lt;/p></description></item><item><title>Docker Iptables Kurallarını Sallamıyor</title><link>https://askin.ws/tr/blog/docker-iptables-kurallarini-sallamiyor/</link><pubDate>Thu, 08 Dec 2022 18:30:00 +0300</pubDate><guid>https://askin.ws/tr/blog/docker-iptables-kurallarini-sallamiyor/</guid><description>&lt;p>Farketmem nedense biraz zaman aldı, bir docker container&amp;rsquo;ının portunu publish ettiğimizde arka tarafta bizden habersiz o port erişime açılıyor. UFW, FirewallD ya da doğrudan iptables kullanmanız farketmiyor.&lt;/p>
&lt;p>Bazı servislere gelen anlamsız istekleri incelerken farkettim bunu.
Çözmem de biraz sancılı oldu, yanlış bir firewall ayarı nedeniyle böyle birşey olduğunu düşündüğüm için çözüm bulmam zorlaştı.
Ama sorun docker&amp;rsquo;ın bir port publish edildiğinde onun için otomatik olarak iptables kuralları eklemesiymiş.
&lt;a href="https://docs.docker.com/network/iptables/#prevent-docker-from-manipulating-iptables" title="Prevent Docker from manipulating iptables">Burada&lt;/a> ilgili docker dökümanı bulunmakta.
Siz de böyle bir durumdaysanız aşağıdaki yöntemlerden birini kullanabilirsiniz.&lt;/p>
&lt;p>&lt;code>/etc/docker/daemon.json&lt;/code> dosyasına aşağıdaki satırları ekledikten sonra docker daemonu yeniden başlatabilirsiniz.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;iptables&amp;#34;&lt;/span> : &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ya da&lt;/p>
&lt;p>Docker servisini başlatırken &lt;code>--iptables=false&lt;/code> parametresiyle başlatabilirsiniz.&lt;/p>
&lt;p>Bu yazıda aynı problemi yaşayan başka birisi var. Eğlenceli bir yazı olmuş ona da bakabilirsiniz. &lt;a href="https://erfansahaf.medium.com/why-docker-and-firewall-dont-get-along-with-each-other-ddca7a002e10" title="Why Docker and Firewall don’t get along with each other!">Why Docker and Firewall don’t get along with each other!&lt;/a>&lt;/p></description></item></channel></rss>